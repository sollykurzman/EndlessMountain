"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var yargs = require("yargs");
var ArgumentParser_1 = require("./ArgumentParser");
var ComponentLoader_1 = require("./ComponentLoader");
var Logger_1 = require("./Logger");
var Auto_1 = require("./Auto");
var fs = require("fs-extra");
var yaml = require("js-yaml");
var deepmerge = require("deepmerge");
var os = require("os");
var path = require("path");
function addTarget(targetName, target, sourceComponent) {
    return __awaiter(this, void 0, void 0, function () {
        var previousTarget, previousComponent, previousComponentPath, sourceComponentPath, preRequisites, t, postRequisites, t;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    target.name = targetName;
                    target.sourceComponent = sourceComponent;
                    previousTarget = this.targets[targetName];
                    if (!previousTarget) return [3 /*break*/, 2];
                    previousComponent = previousTarget.sourceComponent;
                    previousComponentPath = previousComponent ? previousComponent.componentPath : 'internal';
                    sourceComponentPath = sourceComponent.componentPath;
                    return [4 /*yield*/, isSameComponent(sourceComponentPath, previousComponentPath)];
                case 1:
                    if (!(_a.sent())) {
                        throw new Error("Duplicate targets found. Target name " + targetName + ".\n  - " + sourceComponentPath + "\n  - " + previousComponentPath);
                    }
                    _a.label = 2;
                case 2:
                    this.targets[targetName] = target;
                    if (!target.preRequisites) return [3 /*break*/, 5];
                    if (!(typeof target.preRequisites === 'function')) return [3 /*break*/, 4];
                    return [4 /*yield*/, target.preRequisites(this._projectOptions)];
                case 3:
                    t = _a.sent();
                    preRequisites = t ? t : [];
                    return [3 /*break*/, 5];
                case 4:
                    preRequisites = target.preRequisites;
                    _a.label = 5;
                case 5:
                    target.preRequisites = preRequisites || [];
                    if (!target.postRequisites) return [3 /*break*/, 8];
                    if (!(typeof target.postRequisites === 'function')) return [3 /*break*/, 7];
                    return [4 /*yield*/, target.postRequisites(this._projectOptions)];
                case 6:
                    t = _a.sent();
                    postRequisites = t ? t : [];
                    return [3 /*break*/, 8];
                case 7:
                    postRequisites = target.postRequisites;
                    _a.label = 8;
                case 8:
                    target.postRequisites = postRequisites || [];
                    return [2 /*return*/];
            }
        });
    });
}
function isSameComponent(sourceComponentPath, previousComponentPath) {
    return __awaiter(this, void 0, void 0, function () {
        var _a, sourceComponentSource, previousComponentSource;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (previousComponentPath === sourceComponentPath) {
                        return [2 /*return*/, true];
                    }
                    return [4 /*yield*/, Promise.all([
                            fs.readFile(sourceComponentPath, 'utf8'),
                            fs.readFile(previousComponentPath, 'utf8')
                        ])];
                case 1:
                    _a = _b.sent(), sourceComponentSource = _a[0], previousComponentSource = _a[1];
                    return [2 /*return*/, sourceComponentSource === previousComponentSource];
            }
        });
    });
}
var Pango = /** @class */ (function () {
    function Pango() {
    }
    Pango.prototype.run = function (projectOptions) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, args, dashedArgs, opts, _i, _b, targetName, target, err_1;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _c.trys.push([0, 5, , 6]);
                        return [4 /*yield*/, this.applyUserConfig(projectOptions)];
                    case 1:
                        projectOptions = _c.sent();
                        _a = projectOptions;
                        return [4 /*yield*/, this.ensureAppPath(projectOptions)];
                    case 2:
                        _a.appPath = _c.sent();
                        projectOptions.addTarget = addTarget.bind(projectOptions);
                        projectOptions.logger = new Logger_1.Logger(projectOptions);
                        projectOptions.targets = projectOptions.targets || {};
                        args = projectOptions.args || process.argv.slice(2);
                        dashedArgs = ArgumentParser_1.ArgumentParser.getDashedArgs(args);
                        projectOptions.requestedTargets = ArgumentParser_1.ArgumentParser.getNonDashedArgs(args);
                        if (!projectOptions.requestedTargets || projectOptions.requestedTargets.length === 0) {
                            projectOptions.requestedTargets = projectOptions.defaultTargets;
                            if (!projectOptions.requestedTargets || projectOptions.requestedTargets.length === 0) {
                                projectOptions.requestedTargets = ['build'];
                            }
                        }
                        opts = yargs
                            .option('v', {
                            alias: 'verbose',
                            describe: 'sets the log level to debug',
                            type: 'boolean'
                        })
                            .option('loglevel', {
                            describe: 'sets the log level',
                            choices: ['debug', 'info', 'warn', 'error'],
                            type: 'string',
                            default: 'info'
                        })
                            .option('j', {
                            alias: 'concurrency',
                            describe: 'number of multiple items to run at once',
                            type: 'number',
                            default: 1
                        })
                            .parse(dashedArgs);
                        projectOptions.logLevel = ('verbose' in opts && opts.verbose)
                            ? 'debug'
                            : ('loglevel' in opts)
                                ? opts.loglevel
                                : 'info';
                        projectOptions.concurrency = opts.concurrency || 1;
                        for (_i = 0, _b = Object.keys(projectOptions.targets); _i < _b.length; _i++) {
                            targetName = _b[_i];
                            target = projectOptions.targets[targetName];
                            target.preRequisites = target.preRequisites || [];
                            target.postRequisites = target.postRequisites || [];
                            target.name = target.name || targetName;
                        }
                        return [4 /*yield*/, ComponentLoader_1.ComponentLoader.loadComponents(projectOptions)];
                    case 3:
                        _c.sent();
                        return [4 /*yield*/, this.runTargets(projectOptions)];
                    case 4:
                        _c.sent();
                        return [3 /*break*/, 6];
                    case 5:
                        err_1 = _c.sent();
                        if (!projectOptions || projectOptions.logLevel === 'debug') {
                            console.error(err_1);
                        }
                        else {
                            console.error(err_1.message ? err_1.message : err_1);
                        }
                        process.exit(err_1.errorCode || 1);
                        return [3 /*break*/, 6];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    Pango.prototype.runTargets = function (projectOptions) {
        return __awaiter(this, void 0, void 0, function () {
            var auto, _i, _a, requestedTarget, target;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        auto = new Auto_1.Auto(projectOptions);
                        _i = 0, _a = projectOptions.requestedTargets;
                        _b.label = 1;
                    case 1:
                        if (!(_i < _a.length)) return [3 /*break*/, 4];
                        requestedTarget = _a[_i];
                        target = projectOptions.targets[requestedTarget];
                        if (!target) {
                            throw new Error("Unknown target \"" + requestedTarget + "\", available targets [" + Object.keys(projectOptions.targets) + "]");
                        }
                        return [4 /*yield*/, auto.addTarget(target)];
                    case 2:
                        _b.sent();
                        _b.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4: return [4 /*yield*/, auto.run()];
                    case 5:
                        _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Pango.prototype.applyUserConfig = function (projectOptions) {
        return __awaiter(this, void 0, void 0, function () {
            var userConfigFileName, userConfigData, userConfig;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        userConfigFileName = projectOptions.userConfigFileName || 'pango.user.yml';
                        return [4 /*yield*/, fs.pathExists(userConfigFileName)];
                    case 1:
                        if (!(_a.sent())) {
                            return [2 /*return*/, projectOptions];
                        }
                        return [4 /*yield*/, fs.readFile(userConfigFileName, 'utf8')];
                    case 2:
                        userConfigData = _a.sent();
                        userConfig = yaml.safeLoad(userConfigData);
                        return [2 /*return*/, deepmerge(projectOptions, userConfig)];
                }
            });
        });
    };
    Pango.prototype.ensureAppPath = function (projectOptions) {
        return __awaiter(this, void 0, void 0, function () {
            var homeDir;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!projectOptions.appPath) {
                            homeDir = os.homedir();
                            projectOptions.appPath = path.join(homeDir, '.pango');
                        }
                        return [4 /*yield*/, fs.mkdirs(projectOptions.appPath)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, projectOptions.appPath];
                }
            });
        });
    };
    return Pango;
}());
exports.Pango = Pango;
//# sourceMappingURL=Pango.js.map